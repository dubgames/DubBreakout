cc_library(
    name = "win_sdl2",
    includes = [
      "include"
    ], 
    srcs = glob([        
        "src/*.c",
        "src/dynapi/*.c",
        "src/core/windows/**",
        "src/thread/*.h",
        "src/thread/*.c",
        "src/thread/*.cpp",
        "src/atomic/*.c",
        "src/thread/generic/*.h",
        "src/thread/generic/*.c",
        "src/thread/windows/*.h",
        "src/thread/windows/*.c",
        "src/loadso/windows/SDL_sysloadso.c",
	    	"src/audio/*.h",
        "src/audio/*.c",
		    "src/audio/directsound/SDL_directsound.h",
        "src/audio/directsound/SDL_directsound.c",
        "src/audio/dummy/*.h",
        "src/audio/dummy/*.c",
        "src/audio/disk/*.h",
        "src/audio/disk/*.c",
        "src/audio/winmm/*.h",
        "src/audio/winmm/*.c",
        "src/audio/wasapi/*.h",
        "src/audio/wasapi/*.c",
        "src/cpuinfo/*.c",
    		"src/events/*.h",
        "src/events/*.c",
        "src/joystick/*.h",
        "src/joystick/*.c",
        "src/joystick/windows/*.h",
        "src/joystick/windows/*.c",
        "src/haptic/*.h",
        "src/haptic/*.c",
        "src/haptic/windows/*.h",
        "src/haptic/windows/*.c",      
        "src/file/*.c",
        "src/libm/*.h",
        "src/libm/*.c",
	    	"src/render/*.h",
        "src/render/*.c",
        "src/render/*/**",
        "src/stdlib/*.h",        
        "src/stdlib/*.c",
        "src/timer/*.h",
        "src/timer/*.c",
	    	"src/video/*.h",
        "src/video/*.c",
        "src/video/*.cpp",
        "src/video/dummy/*.h",
        "src/video/dummy/*.c",
        "src/video/windows/*.h",
        "src/video/windows/*.c",
	    	"src/video/khronos/vulkan/*.h",
        "src/video/khronos/vulkan/*.c",
        "src/power/*.h",
        "src/power/*.c",        
        "src/power/windows/*.c",
        "src/timer/windows/*.c",
        "src/filesystem/windows/*.c",        
    ], exclude = [
        "src/thread/pthread/SDL_syssem.c",
#        "src/SDL_sysaudio.h",
#        "src/audio/SDL_winmm.c",
        "src/SDL_dynapi.h",
        "src/SDL_dynapi_overrides.h",
    ],),
    hdrs = glob([
        "src/SDL_dynapi.h",
        "src/SDL_dynapi_overrides.h",
        "src/dynapi/*.h",
        "src/*.h",
        "include/SDL.h",
        "include/*.h",
    ]),
    defines = [
      "SDL_VIDEO_VULKAN",
      "SDL_JOYSTICK_DINPUT",      
      "SDL_DISABLE_WINDOWS_IME",      
      "SDL_AUDIO_DRIVER_WINMM",      
      "SDL_MAIN_HANDLED",      
    ],
    linkopts = [
      '-link user32.lib Gdi32.lib Imm32.lib Mincore.lib Shell32.lib Winmm.lib',
#      '-link user32.lib',
#      '-link Gdi32.lib',
#      '-link Imm32.lib',
#      '-link Mincore.lib',
#      '-link Shell32.lib',
#      '-link Winmm.lib',
#      '-Wl,User32.lib',
#      '-Wl,Gdi32.lib',
    ],
    visibility = ["//visibility:public"],
)

objc_library(
    name = "mac_sdl2",
	  includes = [
    	"include"
    ],
    srcs = glob([
        "src/*.h",
        "src/*.c",
        "src/thread/generic/*.h",
        "src/thread/pthread/*.h",
        "src/thread/pthread/*.c",
        "src/thread/generic/SDL_syssem.c",
        "src/thread/*.h",
        "src/thread/*.c",
        "src/atomic/*.c",
        "src/loadso/dlopen/SDL_sysloadso.c",
		    "src/audio/coreaudio/*.h",
        "src/audio/coreaudio/*.m",
        "src/audio/dummy/*.h",
        "src/audio/dummy/*.c",
        "src/audio/disk/*.h",
        "src/audio/disk/*.c",
	    	"src/audio/*.h",
        "src/audio/*.c",
        "src/cpuinfo/*.c",
        "src/dynapi/*.c",
    		"src/events/*.h",
        "src/events/*.c",
        "src/joystick/*.h",
        "src/joystick/*.c",
        "src/joystick/darwin/*.h",
        "src/joystick/darwin/*.c",
        "src/haptic/*.h",
        "src/haptic/*.c",
        "src/haptic/darwin/*.h",
        "src/haptic/darwin/*.c",
        "src/file/cocoa/*.h",
        "src/file/cocoa/*.m",
        "src/file/*.h",
        "src/file/*.c",
        "src/libm/*.h",
        "src/libm/*.c",
	    	"src/render/*.h",
        "src/render/*.c",
        "src/render/*/**",
        "src/stdlib/*.h",        
        "src/stdlib/*.c",
        "src/timer/*.h",
        "src/timer/*.c",
	    	"src/video/*.h",
        "src/video/*.c",
        "src/video/dummy/*.h",
        "src/video/dummy/*.c",
        "src/video/cocoa/*.h",
        "src/video/cocoa/*.c",
        "src/video/cocoa/*.m",
	    	"src/video/khronos/vulkan/*.h",
        "src/video/khronos/vulkan/*.c",
#	    	"src/video/khronos/cocoa/*.h",
#        "src/video/khronos/cocoa/*.c",
        "src/power/*.h",
        "src/power/*.c",
        "src/power/macosx/*.h",
        "src/power/macosx/*.c",
        "src/timer/unix/*.c",
        "src/filesystem/cocoa/*.m",
        "src/dynapi/*.h",
    ], exclude = [
        "src/thread/pthread/SDL_syssem.c",
#        "src/video/SDL_vulkan_internal.h",
#        "src/video/SDL_sysvideo.h",
    ],),
    hdrs = glob([
        "include/SDL.h",
        "include/*.h",
    ]),
    sdk_frameworks = [
        "AudioToolBox",
        "CoreAudio",
        "IOKit",
        "CoreGraphics",
        "CoreImage",
        "Cocoa",
        "Carbon",
        "ForceFeedback",
        "QuartzCore",
        "OpenGL",
    ],
    defines = [
        "SDL_VIDEO_VULKAN",
    ],
    copts = [
        "-fno-objc-arc"
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name="sdl2_headers",
    includes=[
      "include",
      "src/SDL_internal.h",
    ],
    srcs = glob([
        "include/*.h",
    ]),
    defines = [
        "SDL_AUDIO_DRIVER_COREAUDIO",
    ],
    visibility = ["//visibility:public"],
)
